{"version":3,"file":"startpayment.min.js","sources":["../src/startpayment.js"],"sourcesContent":["/**\n *  Novalnet payment plugin\n *\n * Payment integration for the Novalnet system\n *\n * @author       Novalnet\n * @module     paygw_novalnet/startpayment\n * @copyright(C) Novalnet. All rights reserved. <https://www.novalnet.de/>\n * @license https://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport * as Repository from 'paygw_novalnet/repository';\nimport * as Notification from 'core/notification';\nimport * as str from 'core/str';\nimport log from 'core/log';\n\n/**\n * Detect selected payment method (if we have one).\n *\n * @returns {String|null}\n */\nfunction getSelectedPaymentMethod() {\n    let el = document.querySelector('input[name=\"method\"][type=\"radio\"]:checked');\n\n    if (typeof el !== 'undefined' && el !== null) {\n        return el.value;\n    }\n    return null;\n}\n\n/**\n * Show a notification based on the result passed to the function.\n *\n * @param {Object} result - The result object containing data for the notification.\n * @returns {Promise} A promise that resolves when the notification is shown.\n */\nasync function showNotification(result) {\n    try {\n        const strings = await str.get_strings([\n            {key: 'startpayment:failed:title', component: 'paygw_novalnet'},\n            {key: 'startpayment:failed:btncancel', component: 'paygw_novalnet'}\n        ]);\n        Notification.alert(strings[0], result.message, strings[1]);\n        return true;\n    } catch (error) {\n        log.error('Error getting strings:');\n        log.error(error);\n        return false;\n    }\n}\n\n/**\n * Create payment in the backend and redirect.\n *\n * @param {String} selector\n * @returns {Promise}\n */\nexport const startPayment = (selector) => {\n    document.querySelectorAll('button' + selector).forEach(function(button) {\n        button.addEventListener('click', e => {\n            e.preventDefault();\n            const dataset = e.currentTarget.dataset;\n            var PaymentMethod = getSelectedPaymentMethod();\n\n            if (PaymentMethod === null) {\n                Notification.alert('', str.get_string('startpayment:failed:nopayment', 'paygw_novalnet'));\n                return;\n            }\n\n            Repository.createPayment(\n                    dataset.component,\n                    dataset.paymentarea,\n                    dataset.itemid,\n                    dataset.description,\n                    PaymentMethod\n            ).then(result => {\n                if (result.success) {\n                    window.location.href = result.redirecturl;\n                    return true;\n                } else {\n                    return showNotification(result);\n                }\n            }).catch(Notification.exception);\n        });\n    });\n};\n"],"names":["e","_interopRequireWildcard","t","WeakMap","r","n","__esModule","o","i","f","__proto__","default","has","get","set","hasOwnProperty","call","Object","defineProperty","getOwnPropertyDescriptor","Repository","Notification","str","_log","_exports","startPayment","selector","document","querySelectorAll","forEach","button","addEventListener","preventDefault","dataset","currentTarget","PaymentMethod","el","querySelector","value","getSelectedPaymentMethod","createPayment","component","paymentarea","itemid","description","then","result","success","window","location","href","redirecturl","async","strings","get_strings","key","alert","message","error","log","showNotification","catch","exception","get_string"],"mappings":"4KAc2B,IAAAA,EAAA,SAAAC,wBAAAD,EAAAE,GAAAC,GAAAA,mBAAAA,QAAAC,IAAAA,EAAAD,IAAAA,QAAAE,MAAAF,QAAA,OAAAF,wBAAA,SAAAD,EAAAE,OAAAA,GAAAF,GAAAA,EAAAM,WAAA,OAAAN,EAAAO,IAAAA,EAAAC,EAAAC,EAAAC,CAAAA,eAAAC,QAAAX,GAAA,GAAA,OAAAA,GAAA,iBAAAA,GAAA,mBAAAA,EAAAS,OAAAA,EAAAF,GAAAA,EAAAL,EAAAG,EAAAD,EAAA,CAAA,GAAAG,EAAAK,IAAAZ,GAAA,OAAAO,EAAAM,IAAAb,GAAAO,EAAAO,IAAAd,EAAAS,EAAAP,CAAAA,IAAAA,MAAAA,KAAAF,cAAAE,GAAA,CAAA,EAAAa,eAAAC,KAAAhB,EAAAE,MAAAM,GAAAD,EAAAU,OAAAC,iBAAAD,OAAAE,yBAAAnB,EAAAE,MAAAM,EAAAK,KAAAL,EAAAM,KAAAP,EAAAE,EAAAP,EAAAM,GAAAC,EAAAP,GAAAF,EAAAE,IAAAO,OAAAA,CAAAT,GAAAA,EAAAE,EAAA;;;;;;;;;;0FAH3BkB,WAAAnB,wBAAAmB,YACAC,aAAApB,wBAAAoB,cACAC,IAAArB,wBAAAqB,KACAC,MAA2BvB,EAA3BuB,OAA2BvB,EAAAM,WAAAN,EAAAW,CAAAA,QAAAX,GAuEzBwB,SAAAC,aA5B2BC,WACzBC,SAASC,iBAAiB,SAAWF,UAAUG,SAAQ,SAASC,QAC5DA,OAAOC,iBAAiB,SAAS/B,IAC7BA,EAAEgC,iBACF,MAAMC,QAAUjC,EAAEkC,cAAcD,QAChC,IAAIE,cAzChB,WACI,IAAIC,GAAKT,SAASU,cAAc,8CAEhC,OAAI,MAAOD,GACAA,GAAGE,MAEP,IACX,CAkCgCC,GAEE,OAAlBJ,cAKJf,WAAWoB,cACHP,QAAQQ,UACRR,QAAQS,YACRT,QAAQU,OACRV,QAAQW,YACRT,eACNU,MAAKC,QACCA,OAAOC,SACPC,OAAOC,SAASC,KAAOJ,OAAOK,aACvB,GA1C3BC,eAAgCN,QAC5B,IACI,MAAMO,cAAgB/B,IAAIgC,YAAY,CAClC,CAACC,IAAK,4BAA6Bd,UAAW,kBAC9C,CAACc,IAAK,gCAAiCd,UAAW,oBAGtD,OADApB,aAAamC,MAAMH,QAAQ,GAAIP,OAAOW,QAASJ,QAAQ,KAChD,CACV,CAAC,MAAOK,OAGL,OAFAC,KAAAA,QAAID,MAAM,0BACVC,KAAAA,QAAID,MAAMA,QACH,CACX,CACJ,CA+B2BE,CAAiBd,UAE7Be,MAAMxC,aAAayC,WAjBlBzC,aAAamC,MAAM,GAAIlC,IAAIyC,WAAW,gCAAiC,kBAiB3C,GAExC,GAAE,CACJ"}