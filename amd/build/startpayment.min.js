define("paygw_novalnet/startpayment",["exports","paygw_novalnet/repository","core/notification","core/str","core/log"],(function(_exports,Repository,Notification,str,_log){var e;function _interopRequireWildcard(e,t){if("function"==typeof WeakMap)var r=new WeakMap,n=new WeakMap;return(_interopRequireWildcard=function(e,t){if(!t&&e&&e.__esModule)return e;var o,i,f={__proto__:null,default:e};if(null===e||"object"!=typeof e&&"function"!=typeof e)return f;if(o=t?n:r){if(o.has(e))return o.get(e);o.set(e,f)}for(const t in e)"default"!==t&&{}.hasOwnProperty.call(e,t)&&((i=(o=Object.defineProperty)&&Object.getOwnPropertyDescriptor(e,t))&&(i.get||i.set)?o(f,t,i):f[t]=e[t]);return f})(e,t)}
/**
   *  Novalnet payment plugin
   *
   * Payment integration for the Novalnet system
   *
   * @author       Novalnet
   * @module     paygw_novalnet/startpayment
   * @copyright(C) Novalnet. All rights reserved. <https://www.novalnet.de/>
   * @license https://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
   */Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.startPayment=void 0,Repository=_interopRequireWildcard(Repository),Notification=_interopRequireWildcard(Notification),str=_interopRequireWildcard(str),_log=(e=_log)&&e.__esModule?e:{default:e};_exports.startPayment=selector=>{document.querySelectorAll("button"+selector).forEach((function(button){button.addEventListener("click",(e=>{e.preventDefault();const dataset=e.currentTarget.dataset;var PaymentMethod=function(){let el=document.querySelector('input[name="method"][type="radio"]:checked');return null!=el?el.value:null}();null!==PaymentMethod?Repository.createPayment(dataset.component,dataset.paymentarea,dataset.itemid,dataset.description,PaymentMethod).then((result=>result.success?(window.location.href=result.redirecturl,!0):async function(result){try{const strings=await str.get_strings([{key:"startpayment:failed:title",component:"paygw_novalnet"},{key:"startpayment:failed:btncancel",component:"paygw_novalnet"}]);return Notification.alert(strings[0],result.message,strings[1]),!0}catch(error){return _log.default.error("Error getting strings:"),_log.default.error(error),!1}}(result))).catch(Notification.exception):Notification.alert("",str.get_string("startpayment:failed:nopayment","paygw_novalnet"))}))}))}}));

//# sourceMappingURL=startpayment.min.js.map